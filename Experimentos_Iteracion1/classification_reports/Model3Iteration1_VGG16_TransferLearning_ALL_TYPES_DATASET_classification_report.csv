,precision,recall,f1-score,support,0;;;;;;;
Cerebro sano,0.6551724137931034,0.5480769230769231,0.5968586387434556,104.0,;;;;;;;
Cerebro con HSVE,0.6544117647058824,0.7478991596638656,0.6980392156862746,119.0,;;;;;;;
accuracy,0.6547085201793722,0.6547085201793722,0.6547085201793722,0.6547085201793722,;;;;;;;
macro avg,0.654792089249493,0.6479880413703943,0.6474489272148651,223.0,;;;;;;;
weighted avg,0.6547665068810886,0.6547085201793722,0.6508518614169778,223.0,;;;;;;;
TRAINING - 0,,,,,NÃºmero de ejemplos de la clase 0 en el conjunto de entrenamiento: 180;;;;;;;
TRAINING - 1,,,,,NÃºmero de ejemplos de la clase 1 en el conjunto de entrenamiento: 180;;;;;;;
VALIDACIÃ“N - 0,,,,,NÃºmero de ejemplos de la clase 0 en el conjunto de validaciÃ³n: 67;;;;;;;
VALIDACIÃ“N - 1,,,,,NÃºmero de ejemplos de la clase 1 en el conjunto de validaciÃ³n: 67;;;;;;;
TEST - 0,,,,,NÃºmero de ejemplos de la clase 0 en el conjunto de test: 104;;;;;;;
TEST - 1,,,,,NÃºmero de ejemplos de la clase 1 en el conjunto de test: 119;;;;;;;
Training-time,,,,,DuraciÃ³n del entrenamiento: 27 minutos y 31 segundos;;;;;;;
Accuracy,,,,,Model Accuracy: 0.6547085201793722;;;;;;;
AUC-ROC,,,,,AUC-ROC: 0.6317065287653523;;;;;;;
;;;;;;;
;;;;;;;
_________________________________________________________________;;;;;;;Entrenando modelo de CNN...
"Model: ""sequential""";;;;;;;Epoch 1/30
_________________________________________________________________;;;;;;;2023-06-04 20:02:59.574808: I tensorflow/stream_executor/cuda/cuda_dnn.cc:384] Loaded cuDNN version 8100
 Layer (type)                Output Shape              Param #;;;;;;;2023-06-04 20:03:01.604183: I tensorflow/core/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory
=================================================================;;;;;;;2023-06-04 20:03:03.658985: W tensorflow/core/common_runtime/bfc_allocator.cc:360] Garbage collection: deallocate free memory regions (i.e., allocations) so that we can re-allocate a larger region to avoid OOM due to memory fragmentation. If you see this message frequently, you are running near the threshold of the available device memory and re-allocation may incur great performance overhead. You may try smaller batch sizes to observe the performance impact. Set TF_ENABLE_GPU_GARBAGE_COLLECTION=false if you'd like to disable this feature.
 conv2d (Conv2D)             (None, 254, 254, 3)       30;;;;;;;2023-06-04 20:03:04.432211: W tensorflow/core/common_runtime/bfc_allocator.cc:290] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.28GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
;;;;;;;2023-06-04 20:03:08.811196: W tensorflow/core/common_runtime/bfc_allocator.cc:290] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.18GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
 vgg16 (Functional)          (None, None, None, 512)   14714688;;;;;;;2023-06-04 20:03:09.512965: W tensorflow/core/common_runtime/bfc_allocator.cc:290] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.18GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
;;;;;;;2023-06-04 20:03:10.550649: W tensorflow/core/common_runtime/bfc_allocator.cc:290] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.28GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
 flatten (Flatten)           (None, 25088)             0;;;;;;;45/45 [==============================] - ETA: 0s - loss: 0.4310 - accuracy: 0.8000 - precision: 0.81032023-06-04 20:03:30.742643: W tensorflow/core/common_runtime/bfc_allocator.cc:290] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.22GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
;;;;;;;2023-06-04 20:03:35.045172: W tensorflow/core/common_runtime/bfc_allocator.cc:360] Garbage collection: deallocate free memory regions (i.e., allocations) so that we can re-allocate a larger region to avoid OOM due to memory fragmentation. If you see this message frequently, you are running near the threshold of the available device memory and re-allocation may incur great performance overhead. You may try smaller batch sizes to observe the performance impact. Set TF_ENABLE_GPU_GARBAGE_COLLECTION=false if you'd like to disable this feature.
 dense (Dense)               (None, 256)               6422784;;;;;;;45/45 [==============================] - 39s 567ms/step - loss: 0.4310 - accuracy: 0.8000 - precision: 0.8103 - val_loss: 0.5205 - val_accuracy: 0.7537 - val_precision: 0.7931
;;;;;;;Epoch 2/30
 dense_1 (Dense)             (None, 512)               131584;;;;;;;45/45 [==============================] - 33s 748ms/step - loss: 0.0832 - accuracy: 0.9806 - precision: 0.9832 - val_loss: 0.4335 - val_accuracy: 0.8060 - val_precision: 0.8060
;;;;;;;Epoch 3/30
 dense_2 (Dense)             (None, 1)                 513;;;;;;;45/45 [==============================] - 44s 988ms/step - loss: 0.0254 - accuracy: 0.9972 - precision: 1.0000 - val_loss: 0.4121 - val_accuracy: 0.8134 - val_precision: 0.8182
;;;;;;;Epoch 4/30
=================================================================;;;;;;;45/45 [==============================] - 103s 2s/step - loss: 0.0104 - accuracy: 1.0000 - precision: 1.0000 - val_loss: 0.5315 - val_accuracy: 0.7687 - val_precision: 0.9286
Total params: 21,269,599;;;;;;;Epoch 5/30
Trainable params: 6,554,911;;;;;;;45/45 [==============================] - 151s 3s/step - loss: 0.0058 - accuracy: 1.0000 - precision: 1.0000 - val_loss: 0.4440 - val_accuracy: 0.8060 - val_precision: 0.8475
Non-trainable params: 14,714,688;;;;;;;Epoch 6/30
_________________________________________________________________;;;;;;;45/45 [==============================] - 153s 3s/step - loss: 0.0032 - accuracy: 1.0000 - precision: 1.0000 - val_loss: 0.4372 - val_accuracy: 0.8134 - val_precision: 0.8621
;;;;;;;Epoch 7/30
;;;;;;;45/45 [==============================] - 154s 3s/step - loss: 0.0023 - accuracy: 1.0000 - precision: 1.0000 - val_loss: 0.4344 - val_accuracy: 0.8134 - val_precision: 0.8621
;;;;;;;Epoch 8/30
;;;;;;;45/45 [==============================] - 160s 4s/step - loss: 0.0017 - accuracy: 1.0000 - precision: 1.0000 - val_loss: 0.4268 - val_accuracy: 0.8209 - val_precision: 0.8525
;;;;;;;Epoch 9/30
;;;;;;;45/45 [==============================] - 163s 4s/step - loss: 0.0013 - accuracy: 1.0000 - precision: 1.0000 - val_loss: 0.4240 - val_accuracy: 0.7910 - val_precision: 0.8000
;;;;;;;Epoch 10/30
;;;;;;;45/45 [==============================] - 160s 4s/step - loss: 9.7798e-04 - accuracy: 1.0000 - precision: 1.0000 - val_loss: 0.4258 - val_accuracy: 0.8134 - val_precision: 0.8387
;;;;;;;Epoch 11/30
;;;;;;;45/45 [==============================] - 159s 4s/step - loss: 7.8281e-04 - accuracy: 1.0000 - precision: 1.0000 - val_loss: 0.4534 - val_accuracy: 0.8209 - val_precision: 0.8644
;;;;;;;Epoch 12/30
;;;;;;;45/45 [==============================] - 166s 4s/step - loss: 6.6531e-04 - accuracy: 1.0000 - precision: 1.0000 - val_loss: 0.4403 - val_accuracy: 0.8209 - val_precision: 0.8525
;;;;;;;Epoch 13/30
;;;;;;;45/45 [==============================] - 164s 4s/step - loss: 5.4259e-04 - accuracy: 1.0000 - precision: 1.0000 - val_loss: 0.4475 - val_accuracy: 0.8209 - val_precision: 0.8525
;;;;;;;Modelo entrenado
;;;;;;;Duración del entrenamiento: 27 minutos y 31 segundos
